############################################################################
# arch/mips/src/mips32/Toolchain.defs
#
#   Copyright (C) 2012-2013 Gregory Nutt. All rights reserved.
#   Author: Gregory Nutt <gnutt@nuttx.org>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name NuttX nor the names of its contributors may be
#    used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
############################################################################

# Setup for the selected toolchain

#
# Handle old-style chip-specific toolchain names in the absence of
# a new-style toolchain specification, force the selection of a single
# toolchain and allow the selected toolchain to be overridden by a
# command-line selection.
#
ifeq ($(filter y, \
      $(CONFIG_PIC32MX_PINGUINOL) \
      $(CONFIG_MIPS32_TOOLCHAIN_PINGUINOL) \
      $(CONFIG_MIPS32_TOOLCHAIN_GNU_ELF) \
    ),y)
  CONFIG_MIPS32_TOOLCHAIN ?= GNU_ELF
endif
ifeq ($(filter y, \
      $(CONFIG_PIC32MX_MICROCHIPL) \
      $(CONFIG_MIPS32_TOOLCHAIN_MICROCHIPL) \
    ),y)
  CONFIG_MIPS32_TOOLCHAIN ?= MICROCHIPL
endif
ifeq ($(filter y, \
      $(CONFIG_PIC32MX_MICROCHIPL_LITE) \
      $(CONFIG_MIPS32_TOOLCHAIN_MICROCHIPL_LITE) \
    ),y)
  CONFIG_MIPS32_TOOLCHAIN ?= MICROCHIPL_LITE
endif
ifeq ($(filter y, \
      $(CONFIG_PIC32MX_MICROCHIPW) \
      $(CONFIG_MIPS32_TOOLCHAIN_MICROCHIPW) \
    ),y)
  CONFIG_MIPS32_TOOLCHAIN ?= MICROCHIPW
endif
ifeq ($(filter y, \
      $(CONFIG_PIC32MX_MICROCHIPW_LITE) \
      $(CONFIG_MIPS32_TOOLCHAIN_MICROCHIPW_LITE) \
    ),y)
  CONFIG_MIPS32_TOOLCHAIN ?= MICROCHIPW_LITE
endif
ifeq ($(filter y, \
      $(CONFIG_PIC32MX_MICROCHIPOPENL) \
      $(CONFIG_MIPS32_TOOLCHAIN_MICROCHIPOPENL) \
    ),y)
  CONFIG_MIPS32_TOOLCHAIN ?= MICROCHIPOPENL
endif
ifeq ($(filter y, \
      $(CONFIG_PIC32MX_PINGUINOW) \
      $(CONFIG_MIPS32_TOOLCHAIN_PINGUINOW) \
    ),y)
  CONFIG_MIPS32_TOOLCHAIN ?= PINGUINOW
endif

#
# Supported toolchains
#
# Each toolchain definition should set:
#
#  CROSSDEV         The GNU toolchain triple (command prefix)
#  ARCROSSDEV       If required, an alternative prefix used when 
#                   invoking ar and nm.
#  ARCHCPUFLAGS     CPU-specific flags selecting the instruction set
#                   FPU options, etc.
#  MAXOPTIMIZATION  The maximum optimization level that results in
#                   reliable code generation.
#

# Generic GNU mip32 toolchain on OS X or Linux
# including Pinguino mips-elf toolchain

ifeq ($(CONFIG_MIPS32_TOOLCHAIN),GNU_ELF)
  CROSSDEV ?= mips-elf-
  MAXOPTIMIZATION = -O2
  ARCHCPUFLAGS = -mlong32 -membedded-data -msoft-float -march=24kc -EL
  ARCHPICFLAGS = -fpic -membedded-pic
  LDFLAGS += -nostartfiles -nodefaultlibs
  LDSCRIPT = mips-elf-debug.ld
endif

# Microchip C32 toolchain under Linux

ifeq ($(CONFIG_MIPS32_TOOLCHAIN),MICROCHIPL)
  CROSSDEV ?= pic32-
  # CROSSDEV ?= xc32-
  MAXOPTIMIZATION = -O2
  ARCHCPUFLAGS = -mprocessor=elf32pic32mx -mno-float -mlong32 -membedded-data
  ARCHPICFLAGS = -fpic -membedded-pic
  LDFLAGS += -nostartfiles -nodefaultlibs
  LDSCRIPT = xc32-debug.ld
endif

# Microchip C32 toolchain under Windows

ifeq ($(CONFIG_MIPS32_TOOLCHAIN),MICROCHIPW)
  CROSSDEV ?= pic32-
  # CROSSDEV ?= xc32-
  ifneq ($(CONFIG_WINDOWS_NATIVE),y)
    WINTOOL = y
  endif
  MAXOPTIMIZATION = -O2
  ARCHCPUFLAGS = -mprocessor=elf32pic32mx -mno-float -mlong32 -membedded-data
  ARCHPICFLAGS = -fpic -membedded-pic
  LDFLAGS += -nostartfiles -nodefaultlibs
  LDSCRIPT = c32-debug.ld
endif

# Microchip C32 toolchain under Linux

ifeq ($(CONFIG_MIPS32_TOOLCHAIN),MICROCHIPL_LITE)
  CROSSDEV ?= pic32-
  # CROSSDEV ?= xc32-
  # MAXOPTIMIZATION = -O2
  ARCHCPUFLAGS = -mprocessor=elf32pic32mx -mno-float -mlong32 -membedded-data
  ARCHPICFLAGS = -fpic -membedded-pic
  LDFLAGS += -nostartfiles -nodefaultlibs
  LDSCRIPT = xc32-debug.ld
endif

# Microchip C32 toolchain under Windows

ifeq ($(CONFIG_MIPS32_TOOLCHAIN),MICROCHIPW_LITE)
  CROSSDEV ?= pic32-
  # CROSSDEV ?= xc32-
  ifneq ($(CONFIG_WINDOWS_NATIVE),y)
    WINTOOL = y
  endif
  # MAXOPTIMIZATION = -O2
  ARCHCPUFLAGS = -mprocessor=elf32pic32mx -mno-float -mlong32 -membedded-data
  ARCHPICFLAGS = -fpic -membedded-pic
  LDFLAGS += -nostartfiles -nodefaultlibs
  LDSCRIPT = c32-debug.ld
endif

# microchipOpen toolchain under Linux

ifeq ($(CONFIG_MIPS32_TOOLCHAIN),MICROCHIPOPENL)
  CROSSDEV ?= mypic32-
  # MAXOPTIMIZATION = -O2
  ARCHCPUFLAGS = -mprocessor=elf32pic32mx -mno-float -mlong32 -membedded-data
  ARCHPICFLAGS = -fpic -membedded-pic
  LDFLAGS += -nostartfiles -nodefaultlibs
  LDSCRIPT = c32-debug.ld
endif

# Pinguino mips-elf toolchain under Windows

ifeq ($(CONFIG_MIPS32_TOOLCHAIN),PINGUINOW)
  CROSSDEV ?= mips-
  ifneq ($(CONFIG_WINDOWS_NATIVE),y)
    WINTOOL = y
  endif
  MAXOPTIMIZATION = -O2
  ARCHCPUFLAGS = -mlong32 -membedded-data -msoft-float -march=24kc -EL
  ARCHPICFLAGS = -fpic -membedded-pic
  LDFLAGS += -nostartfiles -nodefaultlibs
  LDSCRIPT = mips-elf-debug.ld
endif
