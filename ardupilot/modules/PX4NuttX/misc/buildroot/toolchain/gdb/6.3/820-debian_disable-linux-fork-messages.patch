Status: Proposed upstream after 6.3, not yet committed.

2004-12-06  Daniel Jacobowitz  <dan@debian.org>

	* linux-nat.c (child_follow_fork): Call target_terminal_ours before
	printing output.  Use fprintf_unfiltered.  Only print output when
	debugging.

Index: gdb-6.3/gdb/linux-nat.c
===================================================================
--- gdb-6.3.orig/gdb/linux-nat.c	2004-12-08 18:22:20.386956067 -0500
+++ gdb-6.3/gdb/linux-nat.c	2004-12-08 18:28:49.995585970 -0500
@@ -347,9 +347,13 @@ child_follow_fork (int follow_child)
 	 also, but they'll be reinserted below.  */
       detach_breakpoints (child_pid);
 
-      fprintf_filtered (gdb_stdout,
-			"Detaching after fork from child process %d.\n",
-			child_pid);
+      if (debug_linux_nat)
+	{
+	  target_terminal_ours ();
+	  fprintf_unfiltered (gdb_stdlog,
+			      "Detaching after fork from child process %d.\n",
+			      child_pid);
+	}
 
       ptrace (PTRACE_DETACH, child_pid, 0, 0);
 
@@ -418,9 +422,13 @@ child_follow_fork (int follow_child)
       /* Before detaching from the parent, remove all breakpoints from it. */
       remove_breakpoints ();
 
-      fprintf_filtered (gdb_stdout,
-			"Attaching after fork to child process %d.\n",
-			child_pid);
+      if (debug_linux_nat)
+	{
+	  target_terminal_ours ();
+	  fprintf_unfiltered (gdb_stdlog,
+			      "Attaching after fork to child process %d.\n",
+			      child_pid);
+	}
 
       /* If we're vforking, we may want to hold on to the parent until
 	 the child exits or execs.  At exec time we can remove the old
