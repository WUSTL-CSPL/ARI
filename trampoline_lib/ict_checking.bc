; ModuleID = '/home/osboxes/Desktop/conattest/trampoline_lib/ict_checking.c'
source_filename = "/home/osboxes/Desktop/conattest/trampoline_lib/ict_checking.c"
target datalayout = "e-m:e-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armv6kz--linux-gnueabihf"

@.str = private unnamed_addr constant [39 x i8] c"!!!!!!!!!!!!!!!!PANIC!!!!!!!!!!!!!!!!\0A\00", align 1
@.str.1 = private unnamed_addr constant [24 x i8] c"fwd_indirect_tsf works\0A\00", align 1
@current_cpt_id = common global i32 0, align 4

; Function Attrs: nounwind
define i32 @ict_checking(i32) #0 !dbg !11 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !14, metadata !15), !dbg !16
  ret i32 0, !dbg !17
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
define void @error_found() #0 !dbg !18 {
  %1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i32 0, i32 0)), !dbg !21
  ret void, !dbg !22
}

declare i32 @printf(i8*, ...) #2

; Function Attrs: nounwind
define void @test_fwd_indirect_tsf() #0 !dbg !23 {
  %1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i32 0, i32 0)), !dbg !24
  ret void, !dbg !25
}

attributes #0 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="arm1176jzf-s" "target-features"="+dsp,+strict-align,+vfp2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="arm1176jzf-s" "target-features"="+dsp,+strict-align,+vfp2" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!6, !7, !8, !9}
!llvm.ident = !{!10}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, globals: !3)
!1 = !DIFile(filename: "/home/osboxes/Desktop/conattest/trampoline_lib/ict_checking.c", directory: "/home/osboxes/Desktop/conattest/oat-evaluation/syringe-cb")
!2 = !{}
!3 = !{!4}
!4 = distinct !DIGlobalVariable(name: "current_cpt_id", scope: !0, file: !1, line: 5, type: !5, isLocal: false, isDefinition: true, variable: i32* @current_cpt_id)
!5 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!6 = !{i32 2, !"Dwarf Version", i32 5}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i32 1, !"min_enum_size", i32 4}
!10 = !{!"clang version 3.9.0 "}
!11 = distinct !DISubprogram(name: "ict_checking", scope: !1, file: !1, line: 7, type: !12, isLocal: false, isDefinition: true, scopeLine: 7, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!12 = !DISubroutineType(types: !13)
!13 = !{!5, !5}
!14 = !DILocalVariable(name: "target", arg: 1, scope: !11, file: !1, line: 7, type: !5)
!15 = !DIExpression()
!16 = !DILocation(line: 7, column: 22, scope: !11)
!17 = !DILocation(line: 11, column: 2, scope: !11)
!18 = distinct !DISubprogram(name: "error_found", scope: !1, file: !1, line: 14, type: !19, isLocal: false, isDefinition: true, scopeLine: 14, isOptimized: false, unit: !0, variables: !2)
!19 = !DISubroutineType(types: !20)
!20 = !{null}
!21 = !DILocation(line: 15, column: 2, scope: !18)
!22 = !DILocation(line: 17, column: 1, scope: !18)
!23 = distinct !DISubprogram(name: "test_fwd_indirect_tsf", scope: !1, file: !1, line: 20, type: !19, isLocal: false, isDefinition: true, scopeLine: 20, isOptimized: false, unit: !0, variables: !2)
!24 = !DILocation(line: 21, column: 2, scope: !23)
!25 = !DILocation(line: 22, column: 1, scope: !23)
